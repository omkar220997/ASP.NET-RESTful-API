// <auto-generated />
using KlingelnbergHRM.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KlingelnbergHRM.API.Migrations
{
    [DbContext(typeof(KlingelnbergContext))]
    [Migration("20230110120815_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KlingelnbergHRM.API.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentDescription")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeesId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId");

                    b.HasIndex("EmployeesId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            DepartmentDescription = "Software team working on smart tooling.",
                            DepartmentName = "IT",
                            EmployeesId = 0
                        },
                        new
                        {
                            DepartmentId = 2,
                            DepartmentDescription = "Making Designs of products according to customer requirment.",
                            DepartmentName = "Design",
                            EmployeesId = 0
                        },
                        new
                        {
                            DepartmentId = 3,
                            DepartmentDescription = "Field working at client place to resolve machine problems.",
                            DepartmentName = "Service",
                            EmployeesId = 0
                        },
                        new
                        {
                            DepartmentId = 4,
                            DepartmentDescription = "Bringing clients to purchase the product.",
                            DepartmentName = "Sales",
                            EmployeesId = 0
                        },
                        new
                        {
                            DepartmentId = 5,
                            DepartmentDescription = "Office work.",
                            DepartmentName = "Managment",
                            EmployeesId = 0
                        });
                });

            modelBuilder.Entity("KlingelnbergHRM.API.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeDescription")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            EmployeeDescription = "IT Department Head",
                            EmployeeName = "Kapil Bhudhia"
                        },
                        new
                        {
                            EmployeeId = 2,
                            EmployeeDescription = "Product Lead Industry 4.0",
                            EmployeeName = "Sagar Shende"
                        },
                        new
                        {
                            EmployeeId = 3,
                            EmployeeDescription = "Product Lead Industry 4.0",
                            EmployeeName = "Amit Tilekar"
                        },
                        new
                        {
                            EmployeeId = 4,
                            EmployeeDescription = "Senior Software Engineer",
                            EmployeeName = "Prashant Deshmukh"
                        },
                        new
                        {
                            EmployeeId = 5,
                            EmployeeDescription = "Junior Software Engineer",
                            EmployeeName = "Omkar Kadam"
                        });
                });

            modelBuilder.Entity("KlingelnbergHRM.API.Entities.Department", b =>
                {
                    b.HasOne("KlingelnbergHRM.API.Entities.Employee", "Employee")
                        .WithMany("Departments")
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
